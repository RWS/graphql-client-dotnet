<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
	<ProjectDirectory>$(MSBuildProjectDirectory)</ProjectDirectory>
  
    <Version Condition="'$(VERSION)' == ''">0.0.0.0</Version>
    <Version Condition="'$(VERSION)' != ''">$(VERSION)</Version>
    <BuildConfiguration>Release</BuildConfiguration>
    <IsPreRelease>true</IsPreRelease>
    <VersionMajor>$(Version.Split('.')[0])</VersionMajor>
    <VersionMinor>$(Version.Split('.')[1])</VersionMinor>
    <VersionPatch>$(Version.Split('.')[2])</VersionPatch>
    <VersionBuild>$(Version.Split('.')[3])</VersionBuild>
    <PreReleaseLabel Condition="'$(IsPreRelease)' == 'true'">-beta-$([System.DateTime]::Now.ToString("yyyyMMddHHmm"))</PreReleaseLabel>
    <PackageVersion>$(VersionMajor).$(VersionMinor).$(VersionPatch)$(PreReleaseLabel)</PackageVersion>
    
    <NuGetRepositoryUrl/>
    <NugetSymbolServerUrl/>
    <NuGet>NuGet.exe</NuGet>
    <NuGetPackageDirectory>$(ProjectDirectory)\_NuGet</NuGetPackageDirectory>

    <MsTestExe Condition="'$(MsTestExe)'=='' And Exists('$(MSBuildProgramFiles32)\Microsoft Visual Studio 14.0\Common7\IDE\MSTest.exe')">$(MSBuildProgramFiles32)\Microsoft Visual Studio 14.0\Common7\IDE\MSTest.exe</MsTestExe>
        <MsTestExe Condition="'$(MsTestExe)'=='' And Exists('$(MSBuildProgramFiles32)\Microsoft Visual Studio 12.0\Common7\IDE\MSTest.exe')">$(MSBuildProgramFiles32)\Microsoft Visual Studio 12.0\Common7\IDE\MSTest.exe</MsTestExe>
  </PropertyGroup>
  
  <Target Name="PrepareBuild">
    <Message Text="Preparing Build..."/>

	<Message Text="Clearing NuGet cache..." />
    <Exec Command="$(NuGet) locals all -Clear" />
    <Message Text="Restoring NuGet packages ..." />
    <Exec Command="$(NuGet) restore sln/Sdl.Web.PublicContentApi.sln" />
  	
	<ItemGroup>
      <AssemblyInfo Include="[assembly: AssemblyVersion(&quot;$(VersionMajor).$(VersionMinor).$(VersionPatch).0&quot;)]" />
      <AssemblyInfo Include="[assembly: AssemblyFileVersion(&quot;$(Version)&quot;)]" />
      <AssemblyInfo Include="[assembly: AssemblyInformationalVersion(&quot;$(PackageVersion)&quot;)]" />
      <AssemblyInfo Include="[assembly: AssemblyCopyright(&quot;Copyright Â© 2014-$([System.DateTime]::Now.ToString(&quot;yyyy&quot;)) SDL Group&quot;)]" />
    </ItemGroup>
    <Message Text="Updating CommonAssemblyInfo..." />
    <WriteLinesToFile File="src\Sdl.Web.PublicContentApi\CommonAssemblyInfo.cs" Overwrite="False" Lines="@(AssemblyInfo)" />
  </Target>
  
  <Target Name="RunBuild">
      <Message Text="Running Build..."/>

	  <MSBuild Projects="sln\Sdl.Web.PublicContentApi.sln" Properties="Configuration=$(BuildConfiguration);Platform=Any CPU;AsmVersion=$(Version);FileVersion=$(Version)" Targets="Build" StopOnFirstFailure="true" />
	  	 
  </Target>
  
  <Target Name="Build">
	<Message Text="Start build..." Importance="high" />       
    <CallTarget Targets="PrepareBuild"/>
    <CallTarget Targets="RunBuild"/>		
    <CallTarget Targets="Test"/>  
    <CallTarget Targets="CreatePackages"/>  
    <CallTarget Targets="PublishPackages"/>  
  </Target>


   <Target Name="CreatePackages">
        <Message Importance="high" Text="Creating NuGet packages in '$(NuGetPackageDirectory)' ..."/>
        <Message Text="Package Version: $(PackageVersion)"/>
       
        <!-- Create nuget package  -->
        <Exec Command="$(NuGet) pack Sdl.Web.PublicContentApi.nuspec -Version $(PackageVersion)" WorkingDirectory="$(NuGetPackageDirectory)"/>
        <!-- Create symbols nuget package. Note the use of .symbols in the filename! -->
        <Exec Command="$(NuGet) pack Sdl.Web.PublicContentApi.symbols.nuspec -Symbols -Version $(PackageVersion)" WorkingDirectory="$(NuGetPackageDirectory)"/>
    </Target>

    <Target Name="PublishPackages" Condition="'$(NuGetRepositoryUrl)' != ''">
        <Message Importance="high" Text="Publishing NuGet packages to '$(NuGetRepositoryUrl)' ..."/>
       
        <Exec Command="$(NuGet) push Sdl.Web.PublicContentApi.$(PackageVersion).nupkg -Source $(NuGetRepositoryUrl)" WorkingDirectory="$(NuGetPackageDirectory)"/>

    </Target>

    <Target Name="Test" Condition="'$(BuildConfiguration)' == 'Release'">
        <Message Text="Running unit tests..." />

        <Exec Command='sln\packages\OpenCover.4.6.519\tools\OpenCover.Console.exe -register:user "-target:$(MsTestExe)" "-targetargs:/testcontainer:src\Sdl.Web.PublicContentApi.Tests\bin\$(BuildConfiguration)\Sdl.Web.PublicContentApi.Tests.dll /resultsfile:TestResults.trx" "-filter:+[Sdl.*]* -[*Test*]*" -output:CoverageReports\Coverage.xml"'/>

        <Exec Command='sln\packages\ReportGenerator.2.4.4.0\tools\ReportGenerator.exe "-reports:CoverageReports\Coverage.xml" "-targetdir:CoverageReports"'/>
    </Target>
  
</Project>